<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="729" Id="D1301020010F" Left="8" OnLoadCompleted="D1301020010F_OnLoadCompleted" OnUnloadCompleted="D1301020010F_OnUnloadCompleted" PidAttrib="7" Top="8" Ver="1.0" Width="1260" WorkArea="false">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_PipeList">
				<Contents>
					<colinfo id="ZIP_NO1" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCK_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="KOPIPE_LENG" size="256" summ="default" type="STRING"/>
					<colinfo id="MPIPE_LENG" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCK_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="INSPECT_YEAR" size="256" summ="default" type="STRING"/>
					<colinfo id="REG_INSPECT_PLAN_YMD" size="256" summ="default" type="STRING"/>
					<colinfo id="TEAM_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="TEAM_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="BRANCH_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="ZIP_NM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_PipeResult" OnColumnChanged="ds_PipeResult_OnColumnChanged">
				<Contents>
					<colinfo id="INSPECT_YEAR" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCK_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCK_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="INSPECT_STR_YMD" size="256" summ="default" type="STRING"/>
					<colinfo id="INSPECT_ITEM" size="256" summ="default" type="STRING"/>
					<colinfo id="UPD_EMPID" size="256" summ="default" type="STRING"/>
					<colinfo id="UPD_IP" size="256" summ="default" type="STRING"/>
					<colinfo id="CRT_EMPID" size="256" summ="default" type="STRING"/>
					<colinfo id="CRT_IP" size="256" summ="default" type="STRING"/>
					<colinfo id="INSPECT_END_YMD" size="256" summ="default" type="STRING"/>
					<colinfo id="INSPECT" size="256" summ="default" type="STRING"/>
					<colinfo id="NOT_PASS_WHY" size="256" summ="default" type="STRING"/>
					<colinfo id="ACT_YMD" size="256" summ="default" type="STRING"/>
					<colinfo id="ACT_DESC" size="256" summ="default" type="STRING"/>
					<colinfo id="RMK" size="256" summ="default" type="STRING"/>
					<colinfo id="NOT_PASS_YMD" size="256" summ="default" type="STRING"/>
					<colinfo id="INSPECT_RSLT_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="CATCH_RMK" size="256" summ="default" type="STRING"/>
					<colinfo id="INSPECT_FLAG" size="256" summ="default" type="STRING"/>
					<colinfo id="NOT_PASS_YN" size="256" summ="default" type="STRING"/>
					<colinfo id="MAINTER_NUM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_PipeListExcel">
				<Contents>
					<colinfo id="ZIP_NO1" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCK_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="KOPIPE_LENG" size="256" summ="default" type="STRING"/>
					<colinfo id="MPIPE_LENG" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCK_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="INSPECT_YEAR" size="256" summ="default" type="STRING"/>
					<colinfo id="MAINTER_NUM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_PipeRstFlag">
				<Contents>
					<colinfo id="CRT_TIME" size="256" summ="default" type="STRING"/>
					<colinfo id="CRT_EMPNM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_PipeResultD" OnColumnChanged="ds_PipeResult_OnColumnChanged">
				<Contents>
					<colinfo id="INSPECT_YEAR" size="256" type="STRING"/>
					<colinfo id="BLOCK_CD" size="256" type="STRING"/>
					<colinfo id="BLOCK_NM" size="256" type="STRING"/>
					<colinfo id="INSPECT_STR_YMD" size="256" type="STRING"/>
					<colinfo id="INSPECT_ITEM" size="256" type="STRING"/>
					<colinfo id="UPD_EMPID" size="256" type="STRING"/>
					<colinfo id="UPD_IP" size="256" type="STRING"/>
					<colinfo id="CRT_EMPID" size="256" type="STRING"/>
					<colinfo id="CRT_IP" size="256" type="STRING"/>
					<colinfo id="INSPECT_END_YMD" size="256" type="STRING"/>
					<colinfo id="INSPECT" size="256" type="STRING"/>
					<colinfo id="NOT_PASS_WHY" size="256" type="STRING"/>
					<colinfo id="ACT_YMD" size="256" type="STRING"/>
					<colinfo id="ACT_DESC" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
					<colinfo id="NOT_PASS_YMD" size="256" type="STRING"/>
					<colinfo id="INSPECT_RSLT_CD" size="256" type="STRING"/>
					<colinfo id="CATCH_RMK" size="256" type="STRING"/>
					<colinfo id="INSPECT_FLAG" size="256" type="STRING"/>
					<colinfo id="NOT_PASS_YN" size="256" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="#6cbae1" Bottom="29" Height="3" Id="Shape0" Left="5" LineWidth="0" Right="1243" TabOrder="2" Top="26" Type="Rectangle" Width="1238"></Shape>
		<Grid AutoEnter="TRUE" AutoFit="TRUE" BindDataset="ds_PipeList" BkColor2="user3" BoldHead="FALSE" Border="Flat" Bottom="541" ColSizing="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="512" Id="grd_PipeList" InputPanel="FALSE" Left="5" LineColor="default" LineType="ExVERT" MinWidth="100" MultiSelect="TRUE" OnCellClick="grd_PipeList_OnCellClick" Right="1243" ScrollCell="true" SelColor="BACKGROUND" Style="grid" TabOrder="1" TabStop="true" Top="29" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="1238">
			<contents>
				<format id="Default">
					<columns>
						<col width="40"/>
						<col width="100"/>
						<col width="120"/>
						<col width="151"/>
						<col width="151"/>
						<col width="636"/>
						<col width="170"/>
						<col width="170"/>
					</columns>
					<head>
						<cell col="0" display="normal" text="NO"/>
						<cell col="1" display="text" text="계획일자"/>
						<cell col="2" display="text" text="시/구"/>
						<cell col="3" display="text" text="팀"/>
						<cell col="4" display="text" text="구간"/>
						<cell col="5" display="text" text="구간명"/>
						<cell col="6" display="text" text="본관연장(m)"/>
						<cell col="7" display="text" text="공급관&#32;연장(m)"/>
					</head>
					<body>
						<cell align="right" col="0" display="normal" expandsize="18" expr="rowindex+1" wordwrap="word"/>
						<cell align="center" col="1" colid="REG_INSPECT_PLAN_YMD" display="date"/>
						<cell align="center" col="2" colid="ZIP_NM" display="text" expandsize="18" wordwrap="word"/>
						<cell align="center" col="3" colid="TEAM_NM" display="text"/>
						<cell align="center" col="4" colid="BLOCK_NM" display="text"/>
						<cell align="left" col="5" colid="BLOCK_NM" display="text" expandsize="18" wordwrap="word"/>
						<cell align="right" col="6" colid="KOPIPE_LENG" display="number" expandsize="18" wordwrap="word"/>
						<cell align="right" col="7" colid="MPIPE_LENG" display="number"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Image Align="Left" Height="10" Id="Image5" ImageID="blt_8" Left="5" LeftMargin="12" Style="text_title" TabOrder="3" Text="정기검사대상(배관)" Top="5" Width="210"></Image>
		<Image Align="Left" Height="10" Id="Image0" ImageID="blt_8" Left="4" LeftMargin="12" Style="text_title" TabOrder="6" Text="정기검사결과&#32;등록" Top="548" Width="210"></Image>
		<Shape BKColor="#6cbae1" Bottom="571" Height="3" Id="Shape3" Left="8" LineWidth="0" Right="1246" TabOrder="5" Top="568" Type="Rectangle" Width="1238"></Shape>
		<Grid AutoEnter="TRUE" BindDataset="ds_PipeResult" BkColor2="default" BoldHead="FALSE" Border="Flat" Bottom="717" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="146" Id="grd_PipeRst" InputPanel="FALSE" Left="8" LineColor="default" LineType="ExVERT" MultiSelect="TRUE" OnCellClick="grd_List_OnExpandEdit" OnExpandEdit="grd_PipeRst_OnExpandEdit" Right="1246" RowHeight="20" ScrollCell="true" SelColor="BACKGROUND" Style="grid" TabOrder="4" TabStop="true" Top="571" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="1238">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="40"/>
						<col fix="left" width="181"/>
						<col width="100"/>
						<col width="110"/>
						<col width="80"/>
						<col width="76"/>
						<col width="190"/>
						<col width="79"/>
						<col width="287"/>
						<col width="95"/>
						<col width="252"/>
						<col width="397"/>
						<col width="100"/>
					</columns>
					<head>
						<cell col="0" display="normal" text="NO"/>
						<cell col="1" display="normal" text="구간"/>
						<cell bkcolor="user11" col="2" display="text" text="검사시작일자"/>
						<cell bkcolor="user11" col="3" display="text" text="검사종료일자"/>
						<cell bkcolor="user11" col="4" display="text" text="검사결과"/>
						<cell bkcolor="user11" col="5" display="text" text="검사자"/>
						<cell col="6" display="text" text="지적사항"/>
						<cell col="7" display="text" text="불합격일자"/>
						<cell col="8" display="text" text="사유"/>
						<cell col="9" display="text" text="조치일자"/>
						<cell col="10" display="text" text="조치내용"/>
						<cell col="11" display="text" text="비고"/>
						<cell col="12" display="text" text="정비보수번호"/>
					</head>
					<body>
						<cell align="right" col="0" display="normal" expandsize="18" expr="rowindex+1" wordwrap="word"/>
						<cell align="left" col="1" colid="BLOCK_NM" display="normal" expandsize="18" wordwrap="word"/>
						<cell align="center" col="2" colid="INSPECT_STR_YMD" display="date" expandimage="Calendar" expandshow="true" expandsize="18" wordwrap="word"/>
						<cell align="center" col="3" colid="INSPECT_END_YMD" display="date" expandimage="Calendar" expandshow="true" expandsize="18" wordwrap="word"/>
						<cell align="center" col="4" colid="INSPECT_RSLT_CD" display="combo" edit="combo" expandsize="18" wordwrap="word"/>
						<cell align="center" col="5" colid="INSPECT" display="text" edit="normal" expandsize="18" limit="7" wordwrap="word"/>
						<cell align="left" col="6" colid="CATCH_RMK" display="text" edit="normal" expandsize="18" limit="50" wordwrap="word"/>
						<cell align="center" col="7" colid="NOT_PASS_YMD" display="date" expandimage="calendar" expandshow="true"/>
						<cell align="left" col="8" colid="NOT_PASS_WHY" display="text" edit="normal" limit="50"/>
						<cell align="center" col="9" colid="ACT_YMD" display="date" expandimage="calendar" expandshow="true"/>
						<cell align="left" col="10" colid="ACT_DESC" display="text" edit="normal" limit="30"/>
						<cell align="left" col="11" colid="RMK" display="text" edit="normal" limit="30"/>
						<cell align="center" col="12" colid="MAINTER_NUM" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid AutoEnter="TRUE" AutoFit="TRUE" BindDataset="ds_PipeListExcel" BkColor2="default" BoldHead="FALSE" Border="Flat" Bottom="776" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="43" Id="grd_Excel" InputPanel="FALSE" Left="6" LineColor="default" LineType="ExVERT" MinWidth="100" MultiSelect="TRUE" OnCellClick="grd_List_OnExpandEdit" Right="1448" RowHeight="20" ScrollCell="true" SelColor="BACKGROUND" Style="grid" TabOrder="7" TabStop="true" Top="733" UseDBuff="true" UsePopupMenu="true" UseSelColor="FALSE" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="1442">
			<contents>
				<format id="Default">
					<columns>
						<col width="120"/>
						<col width="120"/>
						<col width="150"/>
						<col width="150"/>
						<col width="150"/>
						<col width="150"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="90"/>
						<col width="235"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="140"/>
					</columns>
					<head>
						<cell col="0" display="text" text="구간코드"/>
						<cell col="1" display="text" text="시/구"/>
						<cell col="2" display="text" text="팀"/>
						<cell col="3" display="text" text="구간"/>
						<cell col="4" display="text" text="본관연장(m)"/>
						<cell col="5" display="text" text="공급관&#32;연장(m)"/>
						<cell col="6" display="text" text="검사시작일자"/>
						<cell col="7" display="text" text="검사종료일자"/>
						<cell col="8" display="text" text="검사결과"/>
						<cell col="9" display="text" text="담당자"/>
						<cell col="10" display="text" text="지적사항"/>
						<cell col="11" display="text" text="불합격일자"/>
						<cell col="12" display="text" text="사유"/>
						<cell col="13" display="text" text="조치일자"/>
						<cell col="14" display="text" text="조치내용"/>
						<cell col="15" display="text" text="비고"/>
					</head>
					<body>
						<cell align="center" col="0" colid="BLOCK_CD" display="text"/>
						<cell align="center" col="1" colid="ZIP_NO1" display="text" expandsize="18" wordwrap="word"/>
						<cell align="center" col="2" colid="TEAM_NM" display="text"/>
						<cell align="left" col="3" colid="BLOCK_NM" display="text" expandsize="18" wordwrap="word"/>
						<cell align="right" col="4" colid="KOPIPE_LENG" display="number" expandsize="18" wordwrap="word"/>
						<cell align="right" col="5" colid="MPIPE_LENG" display="number"/>
						<cell align="center" col="6" colid="INSPECT_STR_YMD" display="date" expandimage="Calendar" expandshow="true" expandsize="18" wordwrap="word"/>
						<cell align="center" col="7" colid="INSPECT_END_YMD" display="date" expandimage="Calendar" expandshow="true" expandsize="18" wordwrap="word"/>
						<cell align="center" col="8" colid="INSPECT_RSLT_CD" display="combo" edit="combo" expandsize="18" wordwrap="word"/>
						<cell align="center" col="9" colid="INSPECT" display="text" edit="normal" expandsize="18" wordwrap="word"/>
						<cell align="left" col="10" colid="CATCH_RMK" display="text" edit="normal" expandsize="18" wordwrap="word"/>
						<cell align="center" col="11" colid="NOT_PASS_YMD" display="date"/>
						<cell align="left" col="12" colid="NOT_PASS_WHY" display="text" edit="normal"/>
						<cell align="center" col="13" colid="ACT_YMD" display="date" expandimage="calendar" expandshow="true"/>
						<cell align="left" col="14" colid="ACT_DESC" display="text" edit="normal"/>
						<cell align="left" col="15" colid="RMK" display="text" edit="normal"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Button Align="Left" ButtonStyle="TRUE" Cursor="HAND" Height="19" Id="Button223" ImageID="btn_6_reg" Left="1143" LeftMargin="21" OnClick="fn_Maint_Repai_Reque" Style="button" TabOrder="8" Text="정비보수의뢰" Top="545" Width="100"></Button>
	</Form>
	<Script><![CDATA[/***************************************************************************************************
* FormID     : D1301020010F_T01.xml
* Form 설명  : 정기 검사 배관 결과를 조회 , 등록, 수정
* 시스템 명  : 안전공급 (D1)
* 작성자     : 김태화 
* 작성일     : 2008-12-24
* 변경내용   : 
****************************************************************************************************/

#include "JS::COMMONA10001.js";
#include "JS::COMMONA10002.js";
#include "JS::COMMOND10001.js";

//정기검사대상 시설에서 선택한 배관에 대한 기본 정보
var StrInspectYear = "";
var strBlockCd = "";
var strBlockNm = "";
var saveFlag = 0;
//------------------------------------------------------------------------------- 
// 함수명: fn_Pipe_History()
//   설명:  검사이력조회 팝업을 오픈 한다.
// arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
// function fn_Pipe_History()
// {
	// gfn_Dialog("D10","D1301020010U","",450,400,true,-1,-1);
// }

//------------------------------------------------------------------------------- 
// 함수명: fn_Maint_Repai_Reque()
//   설명:  정비보수의뢰 팝업을 오픈 한다.
// arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_Maint_Repai_Reque()
{
	var str_MAINTER_NUM  = trim(ds_PipeResult.GetColumn(ds_PipeResult.row,"MAINTER_NUM"     ));
	
	var str_INSPECT_YEAR    = ds_PipeResult.GetColumn(ds_PipeResult.row, "INSPECT_YEAR"      );
	var str_INSPECT_FLAG    = '10';
	var str_INSPECT_STR_YMD = ds_PipeResult.GetColumn(ds_PipeResult.row  , "INSPECT_STR_YMD" );
	var str_BRANCH_CD       = ds_PipeList.GetColumn  (ds_PipeList.row    , "BRANCH_CD"   	 );	
	var str_ZIP_NO1       	= ds_PipeList.GetColumn  (ds_PipeList.row    , "ZIP_NO1"     	 );	
	var str_FACI_NUM	    = ds_PipeResult.GetColumn(ds_PipeResult.row  , "BLOCK_CD"    	 );	
	var str_TEAM_CD		    = ds_PipeList.GetColumn  (ds_PipeList.row    , "TEAM_CD"     	 );		
	
	// ##############################################
	// 정비보수 화면 연계
	// ##############################################	
	
	var objDsName = gfn_D10_setDsObject_D1601010010F();
	
	eval(objDsName).SetColumn(0,"OPEN_FLAG"         ,"D1301020010F" 	); // 01. 구분 (지정된 화면)  
	eval(objDsName).SetColumn(0,"MAINTER_NUM"       ,str_MAINTER_NUM	); // 02. 정비보수번호        
	eval(objDsName).SetColumn(0,"BRANCH_CD"         ,str_BRANCH_CD  	); // 03. 지사코드            

	eval(objDsName).SetColumn(0,"TEAM_CD"           ,str_TEAM_CD      	); // 05. 팀코드              
	eval(objDsName).SetColumn(0,"WORK_FIRM_CD"      ,""	 				); // 06. 시공사코드
	eval(objDsName).SetColumn(0,"FACI_NUM"          ,str_FACI_NUM		); // 07. 시설물코드          
	eval(objDsName).SetColumn(0,"FACI_NM"           ,""					); // 08. 시설물명	
	eval(objDsName).SetColumn(0,"ZIP_SEQ"           ,""					); // 09. 우편일련번호        
	eval(objDsName).SetColumn(0,"ZIP_NO1"           ,str_ZIP_NO1		); // 10. 우편번호1           
	eval(objDsName).SetColumn(0,"ZIP_NO2"           ,""					); // 11. 우편번호2           
	eval(objDsName).SetColumn(0,"HILL"              ,""					); // 12. 산번지              
	eval(objDsName).SetColumn(0,"ADDR_M"            ,""					); // 13. 본번                
	eval(objDsName).SetColumn(0,"ADDR_S"            ,""					); // 14. 부번                
	eval(objDsName).SetColumn(0,"SECOND_ADDR"       ,""					); // 15. 보조주소            
	eval(objDsName).SetColumn(0,"BLD_DONG"          ,""					); // 16. 건물동              
	eval(objDsName).SetColumn(0,"HOSU"              ,""					); // 17. 호수                
	eval(objDsName).SetColumn(0,"LOT_NUM_UNION"     ,""					); // 18. 지번주소조합        	
	eval(objDsName).SetColumn(0,"PAVEMENT_KIND"     ,""					); // 19. 포장종류코드
	eval(objDsName).SetColumn(0,"WORK_REQ_EMPID"    ,""					); // 20. 의뢰자ID            
	eval(objDsName).SetColumn(0,"WORK_REQ_EMPID_NM" ,""					); // 21. 의뢰자명	 
	eval(objDsName).SetColumn(0,"KEY1"              ,str_INSPECT_YEAR   ); // 22. PK1                 
	eval(objDsName).SetColumn(0,"KEY2"              ,str_FACI_NUM	    ); // 23. PK2	
	eval(objDsName).SetColumn(0,"KEY3"              ,str_INSPECT_FLAG   ); // 25. PK3                 
	eval(objDsName).SetColumn(0,"KEY4"              ,str_INSPECT_STR_YMD); // 26. PK4	
	eval(objDsName).SetColumn(0,"KEY5"              ,""				    ); // 26. PK5	
	
	// 화면 OPEN
	gfn_Form_D1601010010F(objDsName);
}

//------------------------------------------------------------------------------- 
// 함수명: fn_D1_SearchPlan()
//   설명:  정기 검사 대상 배관을 조회한다.
// arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_SearchPlan()
{	
	var strSvcID       = "fn_D1_Find";
	var strPart   	   = "D10";
	var strURL         = "handle.do?ServiceName=D1_RegulTestRsltRegisPipeMgr-service"
					   + "&BRANCH_CD="    + cob_Branch.Value
					   + "&ZIP_NO1="      + cob_ZipNo.Value
					   + "&INSPECT_YEAR=" + sp_Year.Value
					   + "&TEAM_CD="      + cob_Team.Value
					   + "&BLOCK_CD="	  + cob_PBlockCd.Value
					   ;
					   
	var strInDatasets  = "";
	var strOutDatasets = "ds_PipeList=ds_PipeList ds_PipeListExcel=ds_PipeListExcel";
	var strArgument    = "findPipe1";
	
	gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
			   
	if(ErrorCode < 0)
	{    
		return;
	}
	
	StrInspectYear = "";
    strBlockCd = "";
    strBlockNm = "";
    ds_PipeResult.ClearData();
    
    if(ds_PipeList.GetRowCount()==0)
	{
        grd_PipeList.NoDataText="조회결과가 없습니다.";
        return;
    }
    
    grd_PipeList_OnCellClick();
	
}

function grd_PipeList_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
	gfn_SetGrdComboBox_Comcode("grd_PipeRst",4,"D10176");
	
	StrInspectYear = ds_PipeList.GetColumn(nRow,"INSPECT_YEAR");
	strBlockCd = ds_PipeList.GetColumn(nRow,"BLOCK_CD");
	strBlockNm = ds_PipeList.GetColumn(nRow,"BLOCK_NM");
	fn_D1_ResultSearch(StrInspectYear, strBlockCd, strBlockNm);
}

//------------------------------------------------------------------------------- 
// 함수명: fn_D1_ResultSearch(StrInspectYear, strBlockCd, strBlockNm)
//   설명: 정기검사 결과등록을 조회 하는 함수
// arguments   
//          StrInspectYear: 검사년도
//          strBlockCd: 구간번호
//          strBlockNm: 구간명
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_ResultSearch(StrInspectYear, strBlockCd, strBlockNm)
{	
	ds_PipeResult.ClearData();
	//-------------------------------------------------------------------------------
	//  Transition   : Service id
	//  ServicePart   : Service part
	//  Url   : Server url
	//  InputDsList   : Input Dataset List
	//  OutputDsList   : Output Dataset List;
	//  Argument   :  Argument
	//-------------------------------------------------------------------------------
    var strSvcID       = "fn_D1_ResultSearch";
    var strPart        = "D10";
    var strURL         = "handle.do?ServiceName=D1_RegulTestRsltRegisPipeMgr-service"
					   + "&BLOCK_CD="     + strBlockCd
					   + "&BLOCK_NM="     + strBlockNm
					   + "&INSPECT_YEAR=" + StrInspectYear
					   ;
    var strInDatasets  = "";
    var strOutDatasets = "ds_PipeResult=ds_PipeResult";
    var strArgument    = "findResult";   
    
    gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
			   
	if(ErrorCode < 0)
	{    
		return;
	}
	
	if(ds_PipeResult.GetRowCount()==0)
	{
        grd_PipeRst.NoDataText="조회결과가 없습니다.";
        return;
    }
	saveFlag = 0;
}

//---------------------------------------------------------
// 달력 팝업
//---------------------------------------------------------
function grd_List_OnExpandEdit(obj,nRow,nCell,strVal,nPivotIndex)
{
	if("INSPECT_STR_YMD" == grd_PipeRst.GetCellProp("body",nCell,"ColId") || "INSPECT_END_YMD" == grd_PipeRst.GetCellProp("body",nCell,"ColId"))
	{
		if(ds_PipeResult.GetColumn(nRow,"INSPECT_FLAG") != "10")
		{
			gfn_SetCalendar(obj, nRow, nCell);
		}
	}else if("ACT_YMD" == grd_PipeRst.GetCellProp("body",nCell,"ColId"))
	{
		if(ds_PipeResult.GetColumn(nRow,"NOT_PASS_YN") != "N" && ds_PipeResult.GetColumn(nRow,"INSPECT_RSLT_CD") == "20")
		{
			gfn_SetCalendar(obj, nRow, nCell);
		}
	}else if("INSPECT_RSLT_CD" == grd_PipeRst.GetCellProp("body",nCell,"ColId"))
	{
		if(ds_PipeResult.GetColumn(nRow,"INSPECT_FLAG") == "10")
		{
			grd_PipeRst.SetCellProp("body",4,"Edit","none");
		}else
		{
			grd_PipeRst.SetCellProp("body",4,"Edit","combo");
		}
	}else if("INSPECT" == grd_PipeRst.GetCellProp("body",nCell,"ColId"))
	{
		if(ds_PipeResult.GetColumn(nRow,"INSPECT_FLAG") == "10")
		{
			grd_PipeRst.SetCellProp("body",5,"Edit","none");
		}else
		{
			grd_PipeRst.SetCellProp("body",5,"Edit","normal");
		}
	}else if("CATCH_RMK" == grd_PipeRst.GetCellProp("body",nCell,"ColId"))
	{
		if(ds_PipeResult.GetColumn(nRow,"NOT_PASS_YN") != "N" && ds_PipeResult.GetColumn(nRow,"INSPECT_RSLT_CD") == "20")
		{
			grd_PipeRst.SetCellProp("body",6,"Edit","normal");
		}else
		{
			grd_PipeRst.SetCellProp("body",6,"Edit","none");
		}
	}else if("NOT_PASS_WHY" == grd_PipeRst.GetCellProp("body",nCell,"ColId"))
	{
		if(ds_PipeResult.GetColumn(nRow,"NOT_PASS_YN") != "N" && ds_PipeResult.GetColumn(nRow,"INSPECT_RSLT_CD") == "20")
		{
			grd_PipeRst.SetCellProp("body",8,"Edit","normal");
		}else
		{
			grd_PipeRst.SetCellProp("body",8,"Edit","none");
		}
	}else if("ACT_DESC" == grd_PipeRst.GetCellProp("body",nCell,"ColId"))
	{
		if(ds_PipeResult.GetColumn(nRow,"NOT_PASS_YN") != "N" && ds_PipeResult.GetColumn(nRow,"INSPECT_RSLT_CD") == "20")
		{
			grd_PipeRst.SetCellProp("body",10,"Edit","normal");
		}else
		{
			grd_PipeRst.SetCellProp("body",10,"Edit","none");
		}
	}
}

function ds_PipeResult_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	
	if(strColumnID == "INSPECT_RSLT_CD" && varNewValue == "20"){
		if(ds_PipeResult.GetColumn(nRow,"INSPECT_STR_YMD") == "" || ds_PipeResult.GetColumn(nRow,"INSPECT_STR_YMD") == null)
		{
			alert(gfn_GetMessage("M000011","%AAA%","검사시작일자를"));
			ds_PipeResult.SetColumn(nRow,"INSPECT_RSLT_CD","10");
			return;
		}else if(ds_PipeResult.GetColumn(nRow,"INSPECT_END_YMD") == "" || ds_PipeResult.GetColumn(nRow,"INSPECT_END_YMD") == null)
		{
			alert(gfn_GetMessage("M000011","%AAA%","검사종료일자를"));
			ds_PipeResult.SetColumn(nRow,"INSPECT_RSLT_CD","10");
			return;
		}else{
			ds_PipeResult.SetColumn(nRow,"NOT_PASS_YMD",ds_PipeResult.GetColumn(nRow,"INSPECT_END_YMD"));
			grd_PipeRst.SetCellProp("body",8,"Edit","normal");
			grd_PipeRst.SetCellProp("body",10,"Edit","normal");
			grd_PipeRst.SetCellProp("body",6,"Edit","normal");
		}
	}else if(strColumnID == "INSPECT_RSLT_CD" && varNewValue == "10"){
		ds_PipeResult.SetColumn(nRow,"NOT_PASS_YMD",NULL);
		ds_PipeResult.SetColumn(nRow,"NOT_PASS_WHY",NULL);
		ds_PipeResult.SetColumn(nRow,"ACT_YMD",NULL);
		ds_PipeResult.SetColumn(nRow,"ACT_DESC",NULL);
		ds_PipeResult.SetColumn(nRow,"CATCH_RMK",NULL);
		grd_PipeRst.SetCellProp("body",8,"Edit","none");
		grd_PipeRst.SetCellProp("body",10,"Edit","none");
		grd_PipeRst.SetCellProp("body",6,"Edit","none");
	}
}

/*===============================================================================
 * 함수명: fn_D1_AddRow()
   설명: 정기검사 결과등록 레코드 한줄을 추가한다.
   return 내용: 없음
===============================================================================*/ 
function fn_D1_AddRow()
{
	if(strBlockCd != "")
	{
		gfn_SetGrdComboBox_Comcode("grd_PipeRst",4,"D10176");
		ds_PipeResult.InsertRow(0);
		ds_PipeResult.SetColumn(0,"BLOCK_CD",strBlockCd);
		ds_PipeResult.SetColumn(0,"BLOCK_NM",strBlockNm);
		ds_PipeResult.SetColumn(0,"INSPECT_YEAR",StrInspectYear);
		//ds_PipeResult.SetColumn(0,"INSPECT_RSLT_CD","10");
    }else{
		alert('정기검사대상을 선택해주세요');
    }
}

/*===============================================================================
 * 함수명: fn_D1_DeleteRow()
   설명: 정기검사 결과등록 레코드 한줄을 삭제한다.
   return 내용: 없음
===============================================================================*/ 
function fn_D1_DeleteRow()
{	
	var result = Confirm("데이터를 삭제하시겠습니까? ");
		
	if(result == '0'){
			return;
	}
	
	ds_PipeResultD.ClearData();
	
	ds_PipeResultD.AddRow();
	
	ds_PipeResultD.CopyRow(0, "ds_PipeResult", ds_PipeResult.row, "");	
	ds_PipeResult.DeleteRow(ds_PipeResult.row);
			
	ds_PipeResultD.UpdateControl = false;
	ds_PipeResultD.SetRowType(0, "delete");
		
	var strSvcID = "savePipe";
	var strPart  = "D10";
	var strURL   = "handle.do?ServiceName=D1_RegulTestRsltRegisPipeMgr-service";
	var strInDatasets  = "ds_PipeResult=ds_PipeResultD:u";
	var strOutDatasets = "";
	var strArgument    = "savaPipeRst";
	
	gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
			   
	if(ErrorCode < 0)
	{    
		return;
	}
	
	if(saveFlag == 0)
	{
		return;
	}
	
	gfn_SetStatusMsg(gfn_GetMessage("M000009","%AAA%","정상적으로 삭제를"),"black",true);
}
//------------------------------------------------------------------------------- 
// 함수명: fn_D1_SaveReg()
//   설명: 정기검사계획 결과등록 내용을 등록 및 수정한다.
// arguments   
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_SaveReg()
{		
	if(strBlockCd != "")
	{
		var temp_1;
		var temp_2;
		
		for(var i=0; i<ds_PipeResult.GetRowCount(); i++){

			temp_1 = trim(ds_PipeResult.GetColumn(i,"INSPECT_STR_YMD"));	
		
			for(var j=0; j<=i; j++){			
				if(i != j){				
					temp_2 = trim(ds_PipeResult.GetColumn(j,"INSPECT_STR_YMD"));
				
					if(temp_1 == temp_2){
						alert("검사일자가 동일한 경우에는 등록하실 수 없습니다. 검사일자가 중복되지 않도록 선택해 주십시오. ");
						return;
					}
				}
			}
		}
		
		for(var i=0; i<ds_PipeResult.RowCount(); i++)
		{		
		if(ds_PipeResult.GetRowType(i) == "insert"){
			var str_INSPECT_YEAR = ds_PipeResult.GetColumn(i, "INSPECT_YEAR"    );
			var str_INSPECT_YMD  = ds_PipeResult.GetColumn(i, "INSPECT_STR_YMD" );
			var str_BLOCK_CD     = ds_PipeResult.GetColumn(i, "BLOCK_CD"        );
						
				fn_D1_CheckReg(str_INSPECT_YEAR, str_INSPECT_YMD, str_BLOCK_CD);
	
				//등록되어 있을 경우
				if (ds_PipeRstFlag.GetRowCount() > 0){	
				
					var str_CRTDTM = ds_PipeRstFlag.GetColumn(0, "CRT_TIME" );
					var str_CRTNM  = ds_PipeRstFlag.GetColumn(0, "CRT_EMPNM");
					
					var str_INSPECT_YMD  = substr(ds_PipeResult.GetColumn(i,"INSPECT_STR_YMD"), 0, 4);
						str_INSPECT_YMD	+= "년 ";
						str_INSPECT_YMD	+= substr(ds_PipeResult.GetColumn(i,"INSPECT_STR_YMD"), 4, 2);
						str_INSPECT_YMD	+= "월 ";
						str_INSPECT_YMD	+= substr(ds_PipeResult.GetColumn(i,"INSPECT_STR_YMD"), 6, 2);
						str_INSPECT_YMD	+= "일";
						
					alert("검사일자 " + str_INSPECT_YMD + "에 대한 결과 데이터는 \n" + str_CRTNM + "님께서 " + str_CRTDTM + "에 이미 등록하신 데이터입니다. \n데이터를 조회해 주십시오. ");
					return;
				}					
			}
		}
	}
	
	if(strBlockCd != "")
	{	
		for(var i=0; i<ds_PipeResult.RowCount(); i++)
		{
			if(ds_PipeResult.GetRowType(i) == "insert")
			{				
				if(ds_PipeResult.GetColumn(i,"INSPECT_STR_YMD") == "" || ds_PipeResult.GetColumn(i,"INSPECT_STR_YMD") == null)
				{
					alert(gfn_GetMessage("M000011","%AAA%","검사시작일자를"));
					return;
				}
				
				if(ds_PipeResult.GetColumn(i,"INSPECT_END_YMD") == "" || ds_PipeResult.GetColumn(i,"INSPECT_END_YMD") == null)
				{
					alert(gfn_GetMessage("M000011","%AAA%","검사종료일자를"));
					return;
				}
				
				if(!fn_DateCheckGrid(ds_PipeResult.GetColumn(i,"INSPECT_STR_YMD"),ds_PipeResult.GetColumn(i,"INSPECT_END_YMD"),"검사시작일자","검사종료일자"))
				{
					return;
				}
				
				if(!fn_DateCheckTodayGrid(ds_PipeResult.GetColumn(i,"INSPECT_END_YMD"),"검사종료일자"))
				{
					return;
				}
				
				if(ds_PipeResult.GetColumn(i,"INSPECT_RSLT_CD") == "" || ds_PipeResult.GetColumn(i,"INSPECT_RSLT_CD") == null)
				{
					alert(gfn_GetMessage("M000011","%AAA%","검사결과를"));
					return;
				}
				
				if(ds_PipeResult.GetColumn(i,"INSPECT") == "" || ds_PipeResult.GetColumn(i,"INSPECT") == null)
				{
					alert(gfn_GetMessage("M000011","%AAA%","담당자를"));
					return;
				}
				
				if(ds_PipeResult.GetColumn(i,"ACT_YMD") != "" && ds_PipeResult.GetColumn(i,"ACT_YMD") != null)
				{
					if(ds_PipeResult.GetColumn(i,"INSPECT_END_YMD") > ds_PipeResult.GetColumn(i,"ACT_YMD"))
					{
						alert('조치일자가 검사종료일자 보다 커야 합니다..');
						return;
					}
					if(!fn_DateCheckTodayGrid(ds_PipeResult.GetColumn(i,"ACT_YMD"),"조치일자"))
					{
						return;
					}
				}
				
				//수정 등록시 셋팅할 사용자 정보
				ds_PipeResult.SetColumn(i, "UPD_EMPID", gfn_GetGlobalValue("G_USER_NO"));
				ds_PipeResult.SetColumn(i, "UPD_IP", gfn_GetGlobalValue("G_IPADDRESS"));
				ds_PipeResult.SetColumn(i, "CRT_EMPID", gfn_GetGlobalValue("G_USER_NO"));
				ds_PipeResult.SetColumn(i, "CRT_IP", gfn_GetGlobalValue("G_IPADDRESS"));
				
				saveFlag = 1;
			}else if(ds_PipeResult.GetRowType(i) == "update")
			{
				if((ds_PipeResult.GetColumn(i,"ACT_YMD") == "" || ds_PipeResult.GetColumn(i,"ACT_YMD") == null) && ds_PipeResult.GetColumn(i,"INSPECT_RSLT_CD") == "20")
				{
					alert(gfn_GetMessage("M000011","%AAA%","조치일자를"));
					return;
				}
				
				if(ds_PipeResult.GetColumn(i,"ACT_YMD") != "" && ds_PipeResult.GetColumn(i,"ACT_YMD") != null)
				{
					if(ds_PipeResult.GetColumn(i,"INSPECT_END_YMD") > ds_PipeResult.GetColumn(i,"ACT_YMD"))
					{
						alert('조치일자가 검사종료일자 보다 커야 합니다..');
						return;
					}
					if(!fn_DateCheckTodayGrid(ds_PipeResult.GetColumn(i,"ACT_YMD"),"조치일자"))
					{
						return;
					}
				}
		
				//수정 등록시 셋팅할 사용자 정보
				ds_PipeResult.SetColumn(i, "UPD_EMPID", gfn_GetGlobalValue("G_USER_NO"));
				ds_PipeResult.SetColumn(i, "UPD_IP", gfn_GetGlobalValue("G_IPADDRESS"));
				
				saveFlag = 1;
			}
		}
	}else{
		//alert('결과등록 조회 후 가능합니다.');
		return;
	}
	
	var strSvcID = "savePipe";
	var strPart = "D10";
	var strURL = "handle.do?ServiceName=D1_RegulTestRsltRegisPipeMgr-service";
	var strInDatasets  = "ds_PipeResult=ds_PipeResult:u";
	var strOutDatasets  = "";
	var strArgument  = "savaPipeRst";
	
	gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
			   
	if(ErrorCode < 0)
	{    
		return;
	}
	
	if(ds_PipeResult.RowCount() == 0)
	{
		return;
	}

	if(saveFlag == 0)
	{
		return;
	}
	
	gfn_SetStatusMsg(gfn_GetMessage("M000009","%AAA%","정상적으로 저장을"),"black",true);
	
	fn_D1_ResultSearch(StrInspectYear, strBlockCd, strBlockNm);
}

//------------------------------------------------------------------------------- 
// 함수명: fn_D1_CheckReg()
//   설명: 정기검사 결과등록을 하기 전 기 등록 여부 확인
// arguments   
//          index: 선택된 행
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_CheckReg(str_INSPECT_YEAR, str_INSPECT_STR_YMD, str_BLOCK_CD)
{	
	//-------------------------------------------------------------------------------
	//  Transition   : Service id
	//  ServicePart   : Service part
	//  Url   : Server url
	//  InputDsList   : Input Dataset List
	//  OutputDsList   : Output Dataset List;
	//  Argument   :  Argument
	//-------------------------------------------------------------------------------
	
	ds_PipeRstFlag.ClearData();
	
    var strSvcID        = "fn_D1_CheckReg";
    var strPart         = "D10";
    var strURL          = "handle.do?ServiceName=D1_RegulTestRsltRegisPipeMgr-service";
		strURL		   += "&INSPECT_YEAR="    + str_INSPECT_YEAR    ;
		strURL		   += "&BLOCK_CD="        + str_BLOCK_CD        ;
		strURL		   += "&INSPECT_STR_YMD=" + str_INSPECT_STR_YMD ;
					   
    var strInDatasets   = "";
    var strOutDatasets  = "ds_PipeRstFlag=ds_PipeRstFlag";
    var strArgument     = "findRstFlag";   
    
    gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
}

function D1301020010F_OnUnloadCompleted(obj)
{
	if(ds_PipeResult.GetUpdate()){
		if(!confirm(gfn_GetMessage("M000016","%AAA%","변경된 내용이 있습니다.종료")))
		{
			return false;
		}
	}
}

function fn_D1_ExcelExport()
{
	var SearchCondition= "";

    SearchCondition = SearchCondition + "지사 :" + RPad(cob_Branch.Text," ",20);
    SearchCondition = SearchCondition + "시/구 :" + RPad(cob_ZipNo.Text," ",20);
    SearchCondition = SearchCondition + "팀 :" + RPad(cob_Team.Text," ",20);
    SearchCondition = SearchCondition + "구간 :" + RPad(cob_PBlockCd.Text," ",20);
    SearchCondition = SearchCondition + "년도 :" + RPad(sp_Year.Text," ",20);
	gfn_ExportExcel("정기검사결과등록 배관 ", 5, SearchCondition, "grd_Excel"); 
}
function D1301020010F_OnLoadCompleted(obj)
{
	gfn_D1_SetGrid_Sort(grd_PipeList);
	gfn_D1_SetGrid_Sort(grd_PipeRst);
}

function grd_PipeRst_OnExpandEdit(obj,nRow,nCell,strVal,nPivotIndex)
{
	if("NOT_PASS_YMD" == grd_PipeRst.GetCellProp("body",nCell,"ColId"))
	{
		if(ds_PipeResult.GetColumn(nRow,"NOT_PASS_YN") != "N" && ds_PipeResult.GetColumn(nRow,"INSPECT_RSLT_CD") == "20")
		{
			gfn_SetCalendar(obj, nRow, nCell);
		}
	}
}
]]></Script>
</Window>