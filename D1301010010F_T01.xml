<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="729" Id="D1301010010F_T01" Left="8" OnLoadCompleted="D1301010010F_T01_OnLoadCompleted" OnUnloadCompleted="D1301010010F_T01_OnUnloadCompleted" PidAttrib="7" Top="8" Ver="1.0" Width="1260" WorkArea="false">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_PipeReg" OnColumnChanged="ds_PipeReg_OnColumnChanged">
				<Contents>
					<colinfo id="BLOCK_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="INSPECT_YEAR" size="256" summ="default" type="STRING"/>
					<colinfo id="GU" size="256" summ="default" type="STRING"/>
					<colinfo id="ZIP_NO1" size="256" summ="default" type="STRING"/>
					<colinfo id="ZIP_NO2" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCK_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="BRANCH_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="TEAM_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="KOPIPE_LENG" size="256" summ="default" type="STRING"/>
					<colinfo id="MPIPE_LENG" size="256" summ="default" type="STRING"/>
					<colinfo id="PIPE_CAR_TOT_LENG" size="256" summ="default" type="STRING"/>
					<colinfo id="REG_INSPECT_PLAN_YMD" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="FEE" size="256" summ="default" type="STRING"/>
					<colinfo id="TAX" size="256" summ="default" type="STRING"/>
					<colinfo id="SUMFEE" size="256" summ="default" type="STRING"/>
					<colinfo id="PIPE_2UND_UNIT_PRC" size="256" summ="default" type="STRING"/>
					<colinfo id="PIPE_2_5UD_UNIT_PRC" size="256" summ="default" type="STRING"/>
					<colinfo id="PIPE_5_10UD_UNIT_PRC" size="256" summ="default" type="STRING"/>
					<colinfo id="PIPE_10K_OVER_UNIT_PRC" size="256" summ="default" type="STRING"/>
					<colinfo id="UPD_EMPID" size="256" summ="default" type="STRING"/>
					<colinfo id="UPD_IP" size="256" summ="default" type="STRING"/>
					<colinfo id="CRT_EMPID" size="256" summ="default" type="STRING"/>
					<colinfo id="CRT_IP" size="256" summ="default" type="STRING"/>
					<colinfo id="FIX_INSPECT_REQ_YN" size="256" summ="default" type="STRING"/>
					<colinfo id="REG_INSPECT_PLAN_YMD1" size="256" summ="default" type="STRING"/>
					<colinfo id="TEAM_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="SAFE_OFFICE_NUM" size="256" summ="default" type="STRING"/>
					<colinfo id="CRT_TIME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_PipeRegExcel">
				<Contents>
					<colinfo id="BLOCK_CD" size="256" type="STRING"/>
					<colinfo id="INSPECT_YEAR" size="256" type="STRING"/>
					<colinfo id="GU" size="256" type="STRING"/>
					<colinfo id="ZIP_NO1" size="256" type="STRING"/>
					<colinfo id="ZIP_NO2" size="256" type="STRING"/>
					<colinfo id="BLOCK_NM" size="256" type="STRING"/>
					<colinfo id="BRANCH_CD" size="256" type="STRING"/>
					<colinfo id="TEAM_CD" size="256" type="STRING"/>
					<colinfo id="KOPIPE_LENG" size="256" type="STRING"/>
					<colinfo id="MPIPE_LENG" size="256" type="STRING"/>
					<colinfo id="PIPE_CAR_TOT_LENG" size="256" type="STRING"/>
					<colinfo id="REG_INSPECT_PLAN_YMD" size="256" type="STRING"/>
					<colinfo id="CHK" size="256" type="STRING"/>
					<colinfo id="FEE" size="256" type="STRING"/>
					<colinfo id="TAX" size="256" type="STRING"/>
					<colinfo id="SUMFEE" size="256" type="STRING"/>
					<colinfo id="PIPE_2UND_UNIT_PRC" size="256" type="STRING"/>
					<colinfo id="PIPE_2_5UD_UNIT_PRC" size="256" type="STRING"/>
					<colinfo id="PIPE_5_10UD_UNIT_PRC" size="256" type="STRING"/>
					<colinfo id="PIPE_10K_OVER_UNIT_PRC" size="256" type="STRING"/>
					<colinfo id="UPD_EMPID" size="256" type="STRING"/>
					<colinfo id="UPD_IP" size="256" type="STRING"/>
					<colinfo id="CRT_EMPID" size="256" type="STRING"/>
					<colinfo id="CRT_IP" size="256" type="STRING"/>
					<colinfo id="FIX_INSPECT_REQ_YN" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_PipeReport">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ValveExcel">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_TestBoxExcel">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_Count">
				<Contents>
					<colinfo id="VALUE" size="256" summ="default" type="STRING"/>
					<colinfo id="NAME" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_PipeRegFlag">
				<Contents>
					<colinfo id="CRT_TIME" size="256" summ="default" type="STRING"/>
					<colinfo id="CRT_EMPNM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ReportList">
				<Contents>
					<colinfo id="SYSTEM_ID" size="256" type="STRING"/>
					<colinfo id="REPORT_ID" size="256" type="STRING"/>
					<colinfo id="REPORT_ARGS" size="256" type="STRING"/>
					<colinfo id="REPORT_TITLE" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_UpdateForm_Copy">
				<Contents>
					<colinfo id="INSPECT_YEAR" size="256" summ="default" type="STRING"/>
					<colinfo id="BLOCK_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="UPD_IP" size="256" summ="default" type="STRING"/>
					<colinfo id="UPD_EMPID" size="256" summ="default" type="STRING"/>
					<colinfo id="FORM_FLAG" size="256" summ="default" type="STRING"/>
					<record>
						<BLOCK_CD></BLOCK_CD>
						<FORM_FLAG></FORM_FLAG>
						<INSPECT_YEAR></INSPECT_YEAR>
						<UPD_EMPID></UPD_EMPID>
						<UPD_IP></UPD_IP>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_PipeReg_Copy"></Dataset>
		</Datasets>
		<Image Align="Left" Height="10" Id="Image5" ImageID="blt_8" Left="5" LeftMargin="12" Style="text_title" TabOrder="3" Text="배관" Top="5" Width="210"></Image>
		<Grid AutoEnter="TRUE" BindDataset="ds_PipeReg" BkColor2="user3" BoldHead="FALSE" Border="Flat" Bottom="716" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="692" Id="grd_PipeList" InputPanel="FALSE" Left="5" LineColor="default" LineType="ExVERT" MultiSelect="TRUE" OnExpandEdit="grd_PipeList_OnCellClick" Right="1243" ScrollCell="true" SelColor="BACKGROUND" Style="grid" TabOrder="1" TabStop="true" Top="24" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="1238">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="30"/>
						<col fix="left" width="39"/>
						<col fix="left" width="63"/>
						<col width="128"/>
						<col width="82"/>
						<col width="123"/>
						<col width="83"/>
						<col width="88"/>
						<col width="82"/>
						<col width="86"/>
						<col width="90"/>
						<col width="85"/>
						<col width="51"/>
						<col width="77"/>
						<col width="76"/>
					</columns>
					<head>
						<cell col="0" cursor="hand" display="checkbox" edit="checkbox" rowspan="2"/>
						<cell col="1" display="text" rowspan="2" text="No"/>
						<cell col="2" display="normal" edit="normal" rowspan="2" text="번호"/>
						<cell col="3" display="text" rowspan="2" text="팀"/>
						<cell col="4" display="text" edit="normal" rowspan="2" text="시/구"/>
						<cell col="5" display="text" edit="normal" rowspan="2" text="구간"/>
						<cell col="6" colspan="3" display="text" edit="normal" text="배관연장(m)"/>
						<cell col="9" colspan="3" display="text" edit="normal" text="검사비(원)"/>
						<cell col="12" display="text" rowspan="2">
							<cell col="0" display="text" text="신청서"/>
							<cell col="0" display="text" row="1" text="출력"/>
						</cell>
						<cell col="13" display="text" edit="normal" rowspan="2" text="계획일자"/>
						<cell col="14" display="text" rowspan="2" text="등록일자"/>
						<cell col="6" display="text" edit="normal" row="1" text="본관"/>
						<cell col="7" display="text" edit="normal" row="1" text="공급관"/>
						<cell col="8" display="text" edit="normal" row="1" text="합계"/>
						<cell col="9" display="text" edit="normal" row="1" text="수수료"/>
						<cell col="10" display="text" edit="normal" row="1" text="부가세"/>
						<cell col="11" display="text" edit="normal" row="1" text="합계"/>
					</head>
					<body>
						<cell col="0" colid="CHK" display="checkbox" edit="checkbox"/>
						<cell align="right" col="1" display="text" expr="rowindex+1"/>
						<cell align="center" col="2" colid="BLOCK_CD" display="normal" expandsize="18" wordwrap="word"/>
						<cell align="center" col="3" colid="TEAM_NM" display="text"/>
						<cell align="center" col="4" colid="GU" display="text" expandsize="18" wordwrap="word"/>
						<cell align="left" col="5" colid="BLOCK_NM" display="text" expandsize="18" wordwrap="word"/>
						<cell align="right" col="6" colid="KOPIPE_LENG" display="number" expandsize="18" wordwrap="word"/>
						<cell align="right" col="7" colid="MPIPE_LENG" display="number"/>
						<cell align="right" col="8" colid="PIPE_CAR_TOT_LENG" display="number"/>
						<cell align="right" col="9" colid="FEE" display="number" expandsize="18" wordwrap="word"/>
						<cell align="right" col="10" colid="TAX" display="number" expandsize="18" wordwrap="word"/>
						<cell align="right" col="11" colid="SUMFEE" display="number" expandsize="18" wordwrap="word"/>
						<cell align="center" col="12" colid="FIX_INSPECT_REQ_YN" display="normal" expandimage="search" expandshow="true"/>
						<cell align="center" col="13" colid="REG_INSPECT_PLAN_YMD" display="date" expandimage="Calendar" expandshow="true" expandsize="18" wordwrap="word"/>
						<cell align="center" col="14" colid="CRT_TIME" display="text"/>
					</body>
					<summary>
						<cell col="0" display="text"/>
						<cell col="1" display="text"/>
						<cell col="2" display="text"/>
						<cell col="3" display="text"/>
						<cell col="4" display="text"/>
						<cell col="5" display="text"/>
						<cell align="right" col="6" display="number" expr='SumNF(&quot;KOPIPE_LENG&quot;)'/>
						<cell align="right" col="7" display="number" expr='SumNF(&quot;MPIPE_LENG&quot;)'/>
						<cell align="right" col="8" display="number" expr='SumNF(&quot;PIPE_CAR_TOT_LENG&quot;)'/>
						<cell align="right" col="9" display="number" expr='SumNF(&quot;FEE&quot;)'/>
						<cell align="right" col="10" display="number" expr='SumNF(&quot;TAX&quot;)'/>
						<cell align="right" col="11" display="number" expr='SumNF(&quot;SUMFEE&quot;)'/>
						<cell col="12" display="text"/>
						<cell col="13" display="text"/>
						<cell col="14" display="text"/>
					</summary>
				</format>
			</contents>
		</Grid>
		<Shape BKColor="#6cbae1" Bottom="24" Height="3" Id="Shape0" Left="5" LineWidth="0" Right="1243" TabOrder="2" Top="21" Type="Rectangle" Width="1238"></Shape>
		<Grid AutoEnter="TRUE" AutoFit="TRUE" BindDataset="ds_PipeRegExcel" BkColor2="user3" BoldHead="FALSE" Border="Flat" Bottom="813" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="80" Id="grd_Excel" InputPanel="FALSE" Left="6" LineColor="default" LineType="ExVERT" MinWidth="100" MultiSelect="TRUE" OnCellClick="grd_PipeList_OnCellClick" OnDrag="Button236_OnDrag" Right="1252" ScrollCell="true" SelColor="BACKGROUND" Style="grid" TabOrder="4" TabStop="true" Top="733" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="1246">
			<contents>
				<format id="Default">
					<columns>
						<col fix="left" width="133"/>
						<col width="100"/>
						<col width="120"/>
						<col width="300"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="87"/>
						<col width="90"/>
					</columns>
					<head>
						<cell col="0" display="normal" edit="normal" rowspan="2" text="번호"/>
						<cell col="1" display="text" edit="normal" rowspan="2" text="시/구"/>
						<cell col="2" display="text" rowspan="2" text="팀"/>
						<cell col="3" display="text" edit="normal" rowspan="2" text="구간"/>
						<cell col="4" colspan="3" display="text" edit="normal" text="배관(m)"/>
						<cell col="7" colspan="3" display="text" edit="normal" text="검사비(원)"/>
						<cell col="10" display="text" rowspan="2" text="신청서출력"/>
						<cell col="11" display="text" edit="normal" rowspan="2" text="계획일자"/>
						<cell col="4" display="text" edit="normal" row="1" text="본관배관"/>
						<cell col="5" display="text" edit="normal" row="1" text="공급관배관"/>
						<cell col="6" display="text" edit="normal" row="1" text="합계"/>
						<cell col="7" display="text" edit="normal" row="1" text="수수료"/>
						<cell col="8" display="text" edit="normal" row="1" text="부가세"/>
						<cell col="9" display="text" edit="normal" row="1" text="합계"/>
					</head>
					<body>
						<cell align="center" col="0" colid="BLOCK_CD" display="normal" expandsize="18" wordwrap="word"/>
						<cell align="center" col="1" colid="GU" display="text" expandsize="18" wordwrap="word"/>
						<cell align="center" col="2" colid="TEAM_NM" display="text"/>
						<cell align="left" col="3" colid="BLOCK_NM" display="text" expandsize="18" wordwrap="word"/>
						<cell align="right" col="4" colid="KOPIPE_LENG" display="number" expandsize="18" wordwrap="word"/>
						<cell align="right" col="5" colid="MPIPE_LENG" display="number"/>
						<cell align="right" col="6" colid="PIPE_CAR_TOT_LENG" display="number"/>
						<cell align="right" col="7" colid="FEE" display="number" expandsize="18" wordwrap="word"/>
						<cell align="right" col="8" colid="TAX" display="number" expandsize="18" wordwrap="word"/>
						<cell align="right" col="9" colid="SUMFEE" display="number" expandsize="18" wordwrap="word"/>
						<cell align="center" col="10" colid="FIX_INSPECT_REQ_YN" display="normal" expandimage="search" expandshow="true"/>
						<cell align="center" col="11" colid="REG_INSPECT_PLAN_YMD" display="date" expandimage="Calendar" expandshow="true" expandsize="18" wordwrap="word"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid AutoEnter="TRUE" BindDataset="ds_PipeReport" BkColor2="user3" BoldHead="FALSE" Border="Flat" Bottom="1101" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="80" Id="grd_PipeReportExcel" InputPanel="FALSE" Left="6" LineColor="default" LineType="ExVERT" MultiSelect="TRUE" OnCellClick="grd_PipeList_OnCellClick" Right="1286" ScrollCell="true" SelColor="BACKGROUND" Style="grid" TabOrder="5" TabStop="true" Top="1021" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="1280">
			<contents>
				<format id="Default">
					<columns>
						<col width="133"/>
						<col width="100"/>
						<col width="133"/>
						<col width="220"/>
						<col width="220"/>
						<col width="220"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="100"/>
						<col width="87"/>
						<col width="90"/>
						<col width="90"/>
						<col width="90"/>
					</columns>
					<head>
						<cell col="0" display="normal" edit="normal" rowspan="2" text="지사"/>
						<cell col="1" display="text" edit="normal" rowspan="2" text="시/구"/>
						<cell col="2" display="normal" edit="normal" rowspan="2" text="팀"/>
						<cell col="3" display="text" edit="normal" rowspan="2" text="구간"/>
						<cell col="4" display="text" edit="normal" rowspan="2" text="시점"/>
						<cell col="5" display="text" edit="normal" rowspan="2" text="종점"/>
						<cell col="6" colspan="3" display="text" edit="normal" text="전년도&#32;검사신청내역"/>
						<cell col="9" colspan="3" display="text" edit="normal" text="배관"/>
						<cell col="12" display="text" rowspan="2" text="담당자"/>
						<cell col="13" display="text" edit="normal" rowspan="2" text="담당지역"/>
						<cell col="14" display="text" edit="normal" rowspan="2" text="검사비(원)"/>
						<cell col="15" display="text" edit="normal" rowspan="2" text="비고"/>
						<cell col="6" display="text" edit="normal" row="1" text="본관"/>
						<cell col="7" display="text" edit="normal" row="1" text="공급관"/>
						<cell col="8" display="text" edit="normal" row="1" text="계"/>
						<cell col="9" display="text" edit="normal" row="1" text="본관"/>
						<cell col="10" display="text" edit="normal" row="1" text="공급관"/>
						<cell col="11" display="text" edit="normal" row="1" text="계"/>
					</head>
					<body>
						<cell align="center" col="0" colid="BRANCH_CD" display="text" expandsize="18" wordwrap="word"/>
						<cell align="left" col="1" colid="GU" display="text" expandsize="18" wordwrap="word"/>
						<cell align="left" col="2" colid="TEAM_CD" display="text" expandsize="18" wordwrap="word"/>
						<cell align="left" col="3" colid="BLOCK_NM" display="text" expandsize="18" wordwrap="word"/>
						<cell align="left" col="4" colid="STR_POINT" display="text" expandsize="18" wordwrap="word"/>
						<cell align="left" col="5" colid="END_POINT" display="text" expandsize="18" wordwrap="word"/>
						<cell align="right" col="6" colid="PRE_KOPIPE_LENG" display="number" expandsize="18" wordwrap="word"/>
						<cell align="right" col="7" colid="PRE_MPIPE_LENG" display="number"/>
						<cell align="right" col="8" colid="PRE_TOTAL_LENG" display="number"/>
						<cell align="right" col="9" colid="KOPIPE_LENG" display="number" expandsize="18" wordwrap="word"/>
						<cell align="right" col="10" colid="MPIPE_LENG" display="number" expandsize="18" wordwrap="word"/>
						<cell align="right" col="11" colid="TOTAL_LENG" display="number" expandsize="18" wordwrap="word"/>
						<cell align="center" col="12" colid="TAKER_EMPNM" display="normal"/>
						<cell align="center" col="13" colid="DONG" display="text" expandsize="18" wordwrap="word"/>
						<cell align="right" col="14" colid="FEE" display="number" expandsize="18" wordwrap="word"/>
						<cell align="center" col="15" colid="RMK" display="text" expandsize="18" wordwrap="word"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid AutoEnter="TRUE" AutoFit="TRUE" BindDataset="ds_ValveExcel" BkColor2="user3" BoldHead="FALSE" Border="Flat" Bottom="909" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="80" Id="grd_ValveExcel" InputPanel="FALSE" Left="4" LineColor="default" LineType="ExVERT" MinWidth="100" MultiSelect="TRUE" Right="1286" ScrollCell="true" SelColor="BACKGROUND" Style="grid" TabOrder="6" TabStop="true" Top="829" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="1282">
			<contents>
				<format id="Default">
					<columns>
						<col width="100"/>
						<col width="150"/>
						<col width="150"/>
						<col width="133"/>
						<col width="443"/>
						<col width="193"/>
						<col width="119"/>
					</columns>
					<head>
						<cell col="0" display="text" edit="normal" rowspan="2" text="번호"/>
						<cell col="1" display="text" rowspan="2" text="팀"/>
						<cell col="2" display="text" rowspan="2" text="구간"/>
						<cell col="3" display="normal" edit="normal" rowspan="2" text="관리번호"/>
						<cell col="4" display="text" edit="normal" rowspan="2" text="위치"/>
						<cell col="5" display="text" edit="normal" rowspan="2" text="타입"/>
						<cell col="6" display="text" edit="normal" rowspan="2" text="비고"/>
					</head>
					<body>
						<cell align="right" col="0" colid="GU" display="text" expandsize="18" expr="rowindex+1" wordwrap="word"/>
						<cell align="center" col="1" colid="TEAM_NM" display="text"/>
						<cell align="center" col="2" colid="BLOCK_NM" display="text"/>
						<cell align="center" col="3" colid="FACI_NUM" display="text" expandsize="18" wordwrap="word"/>
						<cell align="left" col="4" colid="LOT_NUM_UNION" display="text" expandsize="18" wordwrap="word"/>
						<cell align="center" col="5" colid="VBOX_MATER_FLAG" display="text" expandsize="18" wordwrap="word"/>
						<cell align="left" col="6" display="text" expandsize="18" wordwrap="word"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid AutoEnter="TRUE" AutoFit="TRUE" BindDataset="ds_TestBoxExcel" BkColor2="user3" BoldHead="FALSE" Border="Flat" Bottom="1008" ColSizing="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="80" Id="grd_TestBoxExcel" InputPanel="FALSE" Left="8" LineColor="default" LineType="ExVERT" MinWidth="100" MultiSelect="TRUE" Right="1290" ScrollCell="true" SelColor="BACKGROUND" Style="grid" TabOrder="7" TabStop="true" Top="928" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="1282">
			<contents>
				<format id="Default">
					<columns>
						<col width="100"/>
						<col width="150"/>
						<col width="150"/>
						<col width="133"/>
						<col width="481"/>
						<col width="119"/>
					</columns>
					<head>
						<cell col="0" display="text" edit="normal" rowspan="2" text="번호"/>
						<cell col="1" display="text" rowspan="2" text="팀"/>
						<cell col="2" display="text" rowspan="2" text="구간"/>
						<cell col="3" display="normal" edit="normal" rowspan="2" text="관리번호"/>
						<cell col="4" display="text" edit="normal" rowspan="2" text="위치"/>
						<cell col="5" display="text" edit="normal" rowspan="2" text="비고"/>
					</head>
					<body>
						<cell align="right" col="0" colid="GU" display="text" expandsize="18" expr="rowindex+1" wordwrap="word"/>
						<cell align="center" col="1" colid="TEAM_NM" display="text"/>
						<cell align="center" col="2" colid="BLOCK_NM" display="text"/>
						<cell align="center" col="3" colid="FACI_NUM" display="text" expandsize="18" wordwrap="word"/>
						<cell align="left" col="4" colid="LOT_NUM_UNION" display="text" expandsize="18" wordwrap="word"/>
						<cell align="left" col="5" display="text" expandsize="18" wordwrap="word"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Image Align="Left" Height="16" Id="Image19" ImageID="blt" Left="1114" LeftMargin="12" OnClick="Image5_OnClick" Style="blt_search" TabOrder="9" Text="총&#32;건수&#32;:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;건" Top="3" Width="127"></Image>
		<Static Align="Right" Height="11" Id="Static71" Left="1202" Style="static" TabOrder="8" Text="000" Top="5" Width="20"></Static>
	</Form>
	<Script><![CDATA[/***************************************************************************************************
* FormID     : D1301010010F_T01.xml
* Form 설명  : 정기검사계획등록_배관
* 시스템 명  : 안전공급 (D1)
* 작성자     : 김태화 
* 작성일     : 2008-12-19
* 변경내용   : 
****************************************************************************************************/

//-----------------------------------------
// 전처리 함수 선언
//-----------------------------------------
#include "JS::COMMONA10001.js";
#include "JS::COMMONA10008.js";
#include "JS::COMMOND10001.js";

var strBlockCd = "";
var fn_REG_INSPECT_PLAN_YMD = "";
//------------------------------------------------------------------------------- 
// 함수명: fn_Facility_Status()
//   설명:  정기검사시설현황 팝업을 오픈 한다.
// arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_Facility_Status()
{
	if(trim(ds_PipeReg.GetColumn(ds_PipeReg.row,"BLOCK_CD")) != "")
	{
		// 함수 호출용 파라미터를 설정한다
		var strTitle    = "정기검사 대상 시설현황"; 
		var strPart     = "D10";           
		var strReport   = "D1301010010P";
		var strParameter= "BLOCK_CD=" + ds_PipeReg.GetColumn(ds_PipeReg.row,"BLOCK_CD") +",BASE_YEAR=" + sp_Year.Value;
		// 공통 레포트 팝업 함수 호출 
		gfn_ReportPopup(strTitle,strPart,strReport,strParameter);
	
	}else{
		alert('정기검사 대상을 선택해주세요');
	}
}

//---------------------------------------------------------
// 달력 팝업
//---------------------------------------------------------
function grd_PipeList_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
	strBlockCd = ds_PipeReg.GetColumn(nRow,"BLOCK_CD");
	
	fn_REG_INSPECT_PLAN_YMD = Trim(ds_PipeReg.GetColumn(nRow,"REG_INSPECT_PLAN_YMD"));
	
	if("REG_INSPECT_PLAN_YMD" == grd_PipeList.GetCellProp("body",nCell,"ColId"))
	{
		if(ds_PipeReg.GetColumn(nRow,"CHK") != 0){
		
			if(ds_PipeReg.GetColumn(ds_PipeReg.row, "FIX_INSPECT_REQ_YN") == '유'){
				alert("신청서가 출력된 상태에서는 데이터 수정이 불가능합니다. ");
				return;
			}
			
			gfn_SetCalendar(obj, nRow, nCell);
			var str_HoliDay = gfn_Bank_Holiday(ds_PipeReg.GetColumn(nRow,"REG_INSPECT_PLAN_YMD"));
			
			if(str_HoliDay == 'Y'){
				alert("휴일 일자는 등록하실 수 없습니다. ");
				ds_PipeReg.SetColumn(nRow,"REG_INSPECT_PLAN_YMD", null);
				return;
			}
			
		}
	}else if("FIX_INSPECT_REQ_YN" == grd_PipeList.GetCellProp("body",nCell,"ColId"))
	{
		if(ds_PipeReg.GetColumn(nRow,"CHK") != 0){
			
			if(ds_PipeReg.GetColumn(nRow,"INSPECT_YEAR") != null && ds_PipeReg.GetColumn(nRow,"INSPECT_YEAR") != "")
			{
				if(ds_PipeReg.GetRowType(nRow) != 'normal'){
					alert("변경된 데이터를 저장 후 버튼 이용 가능합니다.");
					return;
				}
			}else{
				alert("체크된 데이터를 저장 후 버튼 이용 가능합니다. ");
				return;
			}
		}
		
		if(fn_REG_INSPECT_PLAN_YMD != '' && fn_REG_INSPECT_PLAN_YMD != null){
							
			// 신청서를 인쇄하는 팝업 오픈한다.
			var args  = "INSPECT_SCOPE="         + quote(Replace(ds_PipeReg.GetColumn(nRow,"GU")," ","&")+"!");
				args += " INSPECT_BE_SCOPE="     + quote(Replace(ds_PipeReg.GetColumn(nRow,"BLOCK_NM")," ","&")+ "("+ds_PipeReg.GetColumn(nRow,"PIPE_CAR_TOT_LENG")+ "M)");
				args += " FORM_FLAG=1";
				args += " INSPECT_YEAR="         + quote(ds_PipeReg.GetColumn(nRow,"INSPECT_YEAR"));
				args += " BLOCK_CD="             + quote(ds_PipeReg.GetColumn(nRow,"BLOCK_CD"));
				args += " REG_INSPECT_PLAN_YMD=" + quote(ds_PipeReg.GetColumn(nRow,"REG_INSPECT_PLAN_YMD"));
				args += " SAFE_OFFICE_NUM="      + "";
			
			var str_StateFlag = gfn_Dialog("D10","D1301010012U",args,450,400,true,-1,-1);
			
			if(str_StateFlag == '' || str_StateFlag == null){
				return;
			}					
							
			ds_PipeReg.SetColumn(nRow, "FIX_INSPECT_REQ_YN", str_StateFlag);
			
		}else{
			return;
		}		
	}
}
	
//------------------------------------------------------------------------------- 
// 함수명: fn_D1_SearchPlan()
//   설명:  정기검사계획 배관 중 등록 된 계획을 조회한다.
// arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_SearchPlan()
{	
	var strSvcID = "fn_D1_Search";
	var strPart  = "D10";	
	var strURL   = "handle.do?ServiceName=D1_RegularTimeTestPlanRequeMgr-service" 
				 + "&INSPECT_YEAR=" + sp_Year.Value
				 + "&BRANCH_CD="    + cob_Branch.Value
				 + "&ZIP_NO1="      + cob_ZipNo.Value
				 + "&TEAM_CD="      + cob_Team.Value
				 + "&BLOCK_CD="	    + cob_PBlockCd.Value
				 ;
	var strInDatasets  = "";
	var strOutDatasets = "ds_PipeReg=ds_PipeReg";
	var strArgument    = "searchPipePlan";
	
	gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
			   
	if(ErrorCode < 0)
	{    
		return;
	}
	
	strBlockCd = "";
	
	if(ds_PipeReg.GetRowCount()==0)
	{
        grd_PipeList.NoDataText="조회결과가 없습니다.";
        return;
    }
    
    //----  등록 카운트 
	var j=0;
	
	for(var i=0; i < ds_PipeReg.GetRowCount();i++)
	{
		  j=j+1;
	}	
	
	Static71.Value = LPAD(j, '0', 2);
	
	fn_D1_CostCalPipe();
}

//------------------------------------------------------------------------------- 
// 함수명: fn_D1_CostCalPipe()
//   설명:  정기 검사비 중 수수료 부가세 합계를 계산한다.
// arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_CostCalPipe()
{
	var strTotLeng = 0;
	var strFee = 0;
	var strTax = 0;
	var strSumFee = 0;
	
	for(var i=0;i<ds_PipeReg.RowCount();i++)
	{
		ds_PipeReg.UpdateControl = false;
		
		if(ds_PipeReg.GetColumn(i,"INSPECT_YEAR") != null && ds_PipeReg.GetColumn(i,"INSPECT_YEAR") != "")
		{
			strTotLeng = ParseInt(ds_PipeReg.GetColumn(i,"PIPE_CAR_TOT_LENG"));
		    
			if(strTotLeng < 2000)
			{
				strFee = ParseInt(ds_PipeReg.GetColumn(i,"PIPE_2UND_UNIT_PRC"));
				strTax = Round(strFee * 0.1);
				strSumFee = strFee + strTax;
				
				ds_PipeReg.SetColumn(i,"FEE",strFee);
				ds_PipeReg.SetColumn(i,"TAX",strTax);
				ds_PipeReg.SetColumn(i,"SUMFEE",strSumFee);
			}else if(strTotLeng < 5000)
			{
				strFee = ParseInt(ds_PipeReg.GetColumn(i,"PIPE_2_5UD_UNIT_PRC"));
				strTax = Round(strFee * 0.1);
				strSumFee = strFee + strTax;
				
				ds_PipeReg.SetColumn(i,"FEE",strFee);
				ds_PipeReg.SetColumn(i,"TAX",strTax);
				ds_PipeReg.SetColumn(i,"SUMFEE",strSumFee);
			}else if(strTotLeng < 10000)
			{
				strFee = ParseInt(ds_PipeReg.GetColumn(i,"PIPE_5_10UD_UNIT_PRC"));
				strTax = Round(strFee * 0.1);
				strSumFee = strFee + strTax;
				
				ds_PipeReg.SetColumn(i,"FEE",strFee);
				ds_PipeReg.SetColumn(i,"TAX",strTax);
				ds_PipeReg.SetColumn(i,"SUMFEE",strSumFee);
			}else
			{
				var strOverCost = 0;
				
				
				//10Km 이상인 경우 10Km까지는 10Km단가 + 그이상인건은 1Km마다 15,000추가  ~ 1Km마다 추가됨
				//strOverCost = ToNumber(((strTotLeng - 10000) / 1000)) * ToNumber(ds_PipeReg.GetColumn(i,"PIPE_10K_OVER_UNIT_PRC"));
				strOverCost = ToNumber(ceil((strTotLeng - 10000) / 1000)) * 15000;
				//alert(strOverCost);
				
				strFee = ToNumber(ds_PipeReg.GetColumn(i,"PIPE_10K_OVER_UNIT_PRC")) + strOverCost;
								
				//strFee = Round(ToNumber(ds_PipeReg.GetColumn(i,"PIPE_5_10UD_UNIT_PRC")) + strOverCost);
				strTax = Round(strFee * 0.1);
				strSumFee = strFee + strTax;
								
				ds_PipeReg.SetColumn(i,"FEE",strFee);
				ds_PipeReg.SetColumn(i,"TAX",strTax);
				ds_PipeReg.SetColumn(i,"SUMFEE",strSumFee);
			}
			ds_PipeReg.SetRowType(i, "normal");
		}
	}
}

//------------------------------------------------------------------------------- 
// 함수명: fn_D1_SaveReg()
//   설명: 정기검사계획 배관을 등록한다.
// arguments   
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_SaveReg()
{
	var saveFlag = 0;
	
	var nChk = 0;
	
	if(ds_PipeReg.RowCount() == 0)
	{
		return;
	}
	
	for(var i=0;i<ds_PipeReg.GetRowCount();i++)
	{
		if(ds_PipeReg.GetColumn(i,"CHK") == 1){
			nChk = toNumber(nChk) + toNumber(1);
		}
	}
	
	if(nChk <= 0){
		alert('체크된 항목이 없습니다. \n체크 선택 후 등록, 수정 해주세요');
		return;
	}
		
	var nCnt = 0;
	
	for(var i=0;i<ds_PipeReg.GetRowCount();i++)
	{
		if(ds_PipeReg.GetColumn(i,"CHK") == 1){
			var str_InspectYmd = trim(ds_PipeReg.GetColumn(i,"REG_INSPECT_PLAN_YMD"));
			if(str_InspectYmd == '' || str_InspectYmd == null){
					nCnt = toNumber(nCnt) + toNumber(1);
			}
		}
	}
	
	if(nCnt > 0){
		alert("정기검사계획일자는 필수입력사항입니다. ");
		return;
	}
	
	for(var i=0; i<ds_PipeReg.RowCount(); i++)
	{
		if(ds_PipeReg.GetColumn(i,"CHK") == 1)
		{		
			var str_INSPECT_YEAR = sp_Year.Value;
			var str_BLOCK_CD     = ds_PipeReg.GetColumn(i, "BLOCK_CD"    );
				
			if(ds_PipeReg.GetColumn(i,"INSPECT_YEAR") == null || ds_PipeReg.GetColumn(i,"INSPECT_YEAR") == "")
			{
				fn_D1_CheckReg(str_INSPECT_YEAR, str_BLOCK_CD);
				
				if (ds_PipeRegFlag.GetRowCount() > 0){
												
					var str_CRTDTM = ds_PipeRegFlag.GetColumn(0, "CRT_TIME" );
					var str_CRTNM  = ds_PipeRegFlag.GetColumn(0, "CRT_EMPNM");
					
					var str_BLOCK_NM = ds_PipeReg.GetColumn(i,"BLOCK_NM");
						
					alert(str_INSPECT_YEAR + "년 " + str_BLOCK_NM + "에 대한 계획 데이터는\n" + str_CRTNM + "님께서 " + str_CRTDTM + "에 이미 등록하신 데이터입니다.\n데이터를 조회해 주십시오. ");
					return;
					
			    }else{
			    
					ds_PipeReg.UpdateControl = false;
					ds_PipeReg.SetRowType(i, "insert");
					
					//저장시 사용할 사용자 데이터
					ds_PipeReg.SetColumn(i, "UPD_EMPID"   , gfn_GetGlobalValue("G_USER_NO"  ));
					ds_PipeReg.SetColumn(i, "UPD_IP"      , gfn_GetGlobalValue("G_IPADDRESS"));
					ds_PipeReg.SetColumn(i, "CRT_EMPID"   , gfn_GetGlobalValue("G_USER_NO"  ));
					ds_PipeReg.SetColumn(i, "CRT_IP"      , gfn_GetGlobalValue("G_IPADDRESS"));
					ds_PipeReg.SetColumn(i, "INSPECT_YEAR", sp_Year.Value);
	
					saveFlag = 1;
			    }
			 }else if(ds_PipeReg.GetColumn(i,"INSPECT_YEAR") != null && ds_PipeReg.GetColumn(i,"INSPECT_YEAR") != ""){
			 
				ds_PipeReg.UpdateControl = false;
				ds_PipeReg.SetRowType(i, "update");
				
				if(!fn_DateCheckTodayOver(ds_PipeReg.GetColumn(i,"SELF_INSPECT_PLAN_YMD"),"정기검사계획일자"))
				{
					return;
				}
				
				ds_PipeReg.SetColumn(i, "UPD_EMPID", gfn_GetGlobalValue("G_USER_NO"));
				ds_PipeReg.SetColumn(i, "UPD_IP"   , gfn_GetGlobalValue("G_IPADDRESS"));
				
				saveFlag = 1;
			 
			 }
		 }
	}
	
	var strSvcID       = "insert";
	var strPart        = "D10";
	var strURL         = "handle.do?ServiceName=D1_RegularTimeTestPlanRequeMgr-service";
	var strInDatasets  = "ds_PipeReg=ds_PipeReg:u";
	var strOutDatasets = "";
	var strArgument    = "savePipePlanReg";
		
	gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
			   
	if(ErrorCode < 0)
	{    
		return;
	}
	
	if(ds_PipeReg.RowCount() == 0)
	{
		return;
	}
	
	if(saveFlag == 0)
	{
		return;
	}
	
	gfn_SetStatusMsg(gfn_GetMessage("M000009","%AAA%","정상적으로 저장을"),"black",true);
	
	ds_PipeReg_Copy.Copy(ds_PipeReg);
	
	fn_CommonSearch();
	
	for(var i=0; i<ds_PipeReg.GetRowCount(); i++){
		ds_PipeReg.SetColumn(i, "CHK", ds_PipeReg_Copy.GetColumn(i, "CHK"));
	}
}

//------------------------------------------------------------------------------- 
// 함수명: fn_D1_CheckReg()
//   설명: 정기검사 결과등록을 하기 전 기 등록 여부 확인
// arguments   
//          index: 선택된 행
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_CheckReg(str_INSPECT_YEAR, str_BLOCK_CD)
{	
	//-------------------------------------------------------------------------------
	//  Transition   : Service id
	//  ServicePart   : Service part
	//  Url   : Server url
	//  InputDsList   : Input Dataset List
	//  OutputDsList   : Output Dataset List;
	//  Argument   :  Argument
	//-------------------------------------------------------------------------------
	
	ds_PipeRegFlag.ClearData();
	
    var strSvcID        = "fn_D1_CheckReg";
    var strPart         = "D10";
    var strURL          = "handle.do?ServiceName=D1_RegularTimeTestPlanRequeMgr-service";
		strURL		   += "&INSPECT_YEAR="    + str_INSPECT_YEAR    ;
		strURL		   += "&BLOCK_CD="        + str_BLOCK_CD        ;
					   
    var strInDatasets   = "";
    var strOutDatasets  = "ds_PipeRegFlag=ds_PipeRegFlag";
    var strArgument     = "findRegFlag";   
    
    gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
}

//------------------------------------------------------------------------------- 
//   함수명: fn_D1_Delete()
//   설명  :  정기검사 row 삭제
//   arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_Delete()
{	
	var nChk  = 0;
	var nChk1 = 0;
	
	if(ds_PipeReg.GetRowCount() == 0){
		alert("삭제할 데이터가 없습니다. ");
		return;
	}
	
	var result = Confirm("데이터를 삭제하시겠습니까? ");
		
	if(result == '0'){
			return;
	}
	
	for(var i=0;i<ds_PipeReg.GetRowCount();i++)
	{
		if(ds_PipeReg.GetColumn(i,"CHK") == 1){
			
			nChk = toNumber(nChk) + toNumber(1);
		
			if(ds_PipeReg.GetColumn(i, "FIX_INSPECT_REQ_YN") == '유'){
				nChk1 = toNumber(nChk1) + toNumber(1);
			}
		}		
	}
	
	if(nChk <= 0){
		alert('체크된 항목이 없습니다. \n체크 선택 후 삭제 해주세요');
		return;
	}
	
	if(nChk1 > 0){
		alert("신청서가 출력된 데이터가 포함되어 데이터 삭제가 불가능합니다. ");
		return;
	}
	
	ds_PipeReg.UpdateControl = false;
	
	for(var i=0;i<ds_PipeReg.GetRowCount();i++)
	{
		if(ds_PipeReg.GetColumn(i,"CHK") == 1)
		{	
			ds_PipeReg.SetRowType(i, "delete");
		}
	}
			
	var strSvcID       = "delete";
	var strPart        = "D10";
	var strURL         = "handle.do?ServiceName=D1_RegularTimeTestPlanRequeMgr-service";
	var strInDatasets  = "ds_PipeReg=ds_PipeReg:u";
	var strOutDatasets = "";
	var strArgument    = "savePipePlanReg";
	 	 
	gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
	
	if(ErrorCode < 0)
	{
		return;
	}
	
	gfn_SetStatusMsg(gfn_GetMessage("M000009","%AAA%","정상적으로 삭제를"),"black",true);
	
	ds_PipeReg_Copy.Copy(ds_PipeReg);
	
	fn_CommonSearch();
	
	for(var i=0; i<ds_PipeReg.GetRowCount(); i++){
		ds_PipeReg.SetColumn(i, "CHK", ds_PipeReg_Copy.GetColumn(i, "CHK"));
	}
}

function D1301010010F_T01_OnUnloadCompleted(obj)
{
	if(ds_PipeReg.GetUpdate()){
		if(!confirm(gfn_GetMessage("M000016","%AAA%","변경된 내용이 있습니다.종료")))
		{
			return false;
		}
	}
}

function fn_D1_ExcelExport()
{
	var SearchCondition= "";

    SearchCondition = SearchCondition + "지사 :" + RPad(cob_Branch.Text," ",20);
    SearchCondition = SearchCondition + "시/구 :" + RPad(cob_ZipNo.Text," ",20);
    SearchCondition = SearchCondition + "팀 :" + RPad(cob_Team.Text," ",20);
    SearchCondition = SearchCondition + "구간 :" + RPad(cob_PBlockCd.Text," ",20);
    SearchCondition = SearchCondition + "년도 :" + RPad(sp_Year.Text," ",20);
	gfn_ExportExcel("정기검사계획 배관조회 ", 5, SearchCondition, "grd_Excel"); 
}

function fn_D1_PipeReportExcelExport()
{	
	fn_D1_SearchHistory();
	
	var SearchCondition= "";

	SearchCondition = SearchCondition + "지사 :" + RPad(cob_Branch.Text," ",20);
	SearchCondition = SearchCondition + "시/구 :" + RPad(cob_ZipNo.Text," ",20);
	SearchCondition = SearchCondition + "팀 :" + RPad(cob_Team.Text," ",20);
	SearchCondition = SearchCondition + "구간 :" + RPad(cob_PBlockCd.Text," ",20);
	SearchCondition = SearchCondition + "년도 :" + RPad(sp_Year.Text," ",20);
	gfn_ExportExcel("배관정기검사 수검신청현황 ", 5, SearchCondition, "grd_PipeReportExcel");  
}

//------------------------------------------------------------------------------- 
// 함수명: fn_D1_SearchHistory()
//   설명:  정기검사계획 배관 중 등록 된 계획을 조회한다.
// arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_SearchHistory()
{	
	var strPreYear = ToNumber(sp_Year.Value) - 1;
	
	var strSvcID 	   = "fn_D1_Search";
	var strPart 	   = "D10";	
	var strURL         = "handle.do?ServiceName=D1_RegularTimeTestPlanRequeMgr-service"
					   + "&PRE_INSPECT_YEAR=" + strPreYear
					   + "&INSPECT_YEAR="     + sp_Year.Value
					   + "&BRANCH_CD="        + cob_Branch.Value
					   + "&ZIP_NO1="          + cob_ZipNo.Value
					   + "&TEAM_CD="          + cob_Team.Value
					   + "&BLOCK_CD="  	      + cob_PBlockCd.Value
					   ;
	var strInDatasets  = "";
	var strOutDatasets = "ds_PipeReport=ds_PipeReport";
	var strArgument    = "searchPipeReport";
	
	gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
	if(ErrorCode < 0)
	{    
		return;
	}
	fn_D1_CostCalPipeReport();
}

//------------------------------------------------------------------------------- 
// 함수명: fn_D1_CostCalPipeReport()
//   설명:  검사비 수수료를 계산한다.
// arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_CostCalPipeReport()
{
	var strFee = 0;
	
	for(var i=0;i<ds_PipeReport.RowCount();i++)
	{		
		if(ds_PipeReport.GetColumn(i,"INSPECT_YEAR") != null && ds_PipeReport.GetColumn(i,"INSPECT_YEAR") != "")
		{
			strTotLeng = ParseInt(ds_PipeReport.GetColumn(i,"PIPE_CAR_TOT_LENG"));
		    
			if(strTotLeng < 2000)
			{
				strFee = ParseInt(ds_PipeReport.GetColumn(i,"PIPE_2UND_UNIT_PRC"));
				ds_PipeReport.SetColumn(i,"FEE",strFee);
			}else if(strTotLeng < 5000)
			{
				strFee = ParseInt(ds_PipeReport.GetColumn(i,"PIPE_2_5UD_UNIT_PRC"));
				ds_PipeReport.SetColumn(i,"FEE",strFee);
			}else if(strTotLeng < 10000)
			{
				strFee = ParseInt(ds_PipeReport.GetColumn(i,"PIPE_5_10UD_UNIT_PRC"));
				ds_PipeReport.SetColumn(i,"FEE",strFee);
			}else
			{
				var strOverCost = 0;
				
				strOverCost = toNumber(((strTotLeng - 10000) / 1000)) * toNumber(ds_PipeReport.GetColumn(i,"PIPE_10K_OVER_UNIT_PRC"));
				
				strFee = ParseInt(ds_PipeReport.GetColumn(i,"PIPE_5_10UD_UNIT_PRC")) + strOverCost;
				
				ds_PipeReport.SetColumn(i,"FEE",strFee);
			}
		}
	}
}

function fn_D1_ValveReportExcelExport()
{
	fn_D1_SearchValveReport();
	
	var SearchCondition= "";

    SearchCondition = SearchCondition + "지사 :" + RPad(cob_Branch.Text," ",20);
    SearchCondition = SearchCondition + "시/구 :" + RPad(cob_ZipNo.Text," ",20);
    SearchCondition = SearchCondition + "팀 :" + RPad(cob_Team.Text," ",20);
    SearchCondition = SearchCondition + "구간 :" + RPad(cob_PBlockCd.Text," ",20);
    SearchCondition = SearchCondition + "년도 :" + RPad(sp_Year.Text," ",20);
	gfn_ExportExcel("본, 공급관 밸브 현황 ", 5, SearchCondition, "grd_ValveExcel"); 
}

//------------------------------------------------------------------------------- 
// 함수명: fn_D1_SearchValveReport()
//   설명:  본,공급관 밸브 현황을 조회한다.
// arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_SearchValveReport()
{		
	var strSvcID     = "fn_D1_Search";
	var strPart      = "D10";	
	var strURL       = "handle.do?ServiceName=D1_RegularTimeTestPlanRequeMgr-service"
					 + "&BRANCH_CD=" + cob_Branch.Value
					 + "&ZIP_NO1="   + cob_ZipNo.Value
					 + "&TEAM_CD="   + cob_Team.Value
					 + "&BLOCK_CD="  + cob_PBlockCd.Value
					 ;
	var strInDatasets   = "";
	var strOutDatasets  = "ds_ValveExcel=ds_ValveExcel";
	var strArgument     = "searchValveReport";
	
	gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
	if(ErrorCode < 0)
	{    
		return;
	}
}

function fn_D1_TbBoxReportExcelExport()
{
	fn_D1_SearchTBReport();
	
	var SearchCondition= "";

    SearchCondition = SearchCondition + "지사 :" + RPad(cob_Branch.Text," ",20);
    SearchCondition = SearchCondition + "시/구 :" + RPad(cob_ZipNo.Text," ",20);
    SearchCondition = SearchCondition + "팀 :" + RPad(cob_Team.Text," ",20);
    SearchCondition = SearchCondition + "구간 :" + RPad(cob_PBlockCd.Text," ",20);
    SearchCondition = SearchCondition + "년도 :" + RPad(sp_Year.Text," ",20);
    gfn_ExportExcel("본,공급관 TB현황 ", 5, SearchCondition, "grd_TestBoxExcel"); 
}

//------------------------------------------------------------------------------- 
// 함수명: fn_D1_SearchTBReport()
//   설명:  본,공급관 T/B 현황을 조회한다.
// arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function fn_D1_SearchTBReport()
{		
	var strSvcID 	   = "fn_D1_Search";
	var strPart 	   = "D10";	
	var strURL 		   = "handle.do?ServiceName=D1_RegularTimeTestPlanRequeMgr-service" 
				       + "&BRANCH_CD=" + cob_Branch.Value
					   + "&ZIP_NO1="   + cob_ZipNo.Value
					   + "&TEAM_CD="   + cob_Team.Value
					   + "&BLOCK_CD="  + cob_PBlockCd.Value
					   ;
	var strInDatasets  = "";
	var strOutDatasets = "ds_TestBoxExcel=ds_TestBoxExcel";
	var strArgument    = "searchTBReport";
	
	gfn_SyncCall( 
					 strSvcID
				   , strPart
				   , strURL
				   , strInDatasets
				   , strOutDatasets
				   , strArgument
			   );
	if(ErrorCode < 0)
	{    
		return;
	}
}

function D1301010010F_T01_OnLoadCompleted(obj)
{
	gfn_D1_SetGrid_Sort(grd_PipeList);
}

//------------------------------------------------------------------------------- 
// 함수명: ds_PipeReg_OnColumnChanged()
//   설명:  신청서 출력 여부 체크
// arguments
//   return 내용: 없음
//------------------------------------------------------------------------------- 
function ds_PipeReg_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{	
	if(strColumnID == "REG_INSPECT_PLAN_YMD"){
		if(ds_PipeReg.GetColumn(nRow, "FIX_INSPECT_REQ_YN") == '유'){			
			//alert("신청서가 출력된 상태에서는 계획일자가 변경이 불가능합니다. ");
			//alert(fn_REG_INSPECT_PLAN_YMD);
			ds_PipeReg.SetColumn(nRow, "REG_INSPECT_PLAN_YMD", fn_REG_INSPECT_PLAN_YMD);			
			return;
		}
	}
}

function fn_MultiReport_Print(){
	
	var nChk  = 0;
	var nChk1 = 0;
	var nChk2 = 0;
	
	if(ds_PipeReg.GetRowCount() == 0){
		alert("출력할 데이터가 없습니다. ");
		return;
	}
		
	for(var i=0;i<ds_PipeReg.GetRowCount();i++)
	{
		if(ds_PipeReg.GetColumn(i,"CHK") == 1){
			
			nChk = toNumber(nChk) + toNumber(1);
		
			if(ds_PipeReg.GetColumn(i, "FIX_INSPECT_REQ_YN") == '유'){
				nChk1 = toNumber(nChk1) + toNumber(1);
			}
			
			var str_REG_INSPECT_PLAN_YMD = ds_PipeReg.GetColumn(i, "REG_INSPECT_PLAN_YMD");
			
			if(str_REG_INSPECT_PLAN_YMD == null || str_REG_INSPECT_PLAN_YMD == ''){
				nChk2 = toNumber(nChk2) + toNumber(1);
			}
		}		
	}
	
	if(nChk <= 0){
		alert('체크된 항목이 없습니다. \n체크 선택 후 출력 해주세요');
		return;
	}
	
	if(nChk1 > 0){
		alert("신청서가 출력된 데이터가 포함되어 데이터 일괄출력이 불가능합니다. ");
		return;
	}
	
	if(nChk2 > 0){
		alert("계획일자가 지정되지 않은 데이터가 존재하여 일괄출력이 불가능합니다. ");
		return;
	}
	
	ds_ReportList.ClearData();	
	ds_UpdateForm_Copy.ClearData();
	
	var nCount = ds_PipeReg.GetRowCount();
		
	// 함수 호출용 파라미터를 만든다
	var strTitle     ;				// 출력물 제목
    var strPart      ;         		// 시스템 명 
	var strReport    ; 				// 출력물 ID 
	var strParameter ;      		// 파라미터구문 (단 ',' 로구분할것 )	

	for(var i=0; i<nCount; i++){
		
		if(ds_PipeReg.GetColumn(i,"CHK") == 1){
		
		var nRow = ds_ReportList.addRow();		
				
		// 함수 호출용 파라미터를 설정한다
		var strTitle      = "정기 검사 신청서" + " " + nRow; 
		var strPart       = "D10"			    ;           
		var strReport     = "D1301010012P"    ; 
		var strParameter  = "INSPECT_SCOPE="         + quote(Replace(ds_PipeReg.GetColumn(i,"GU")," ","&"));
			strParameter += ",INSPECT_BE_SCOPE="     + quote(Replace(ds_PipeReg.GetColumn(i,"BLOCK_NM")," ","&")+ "("+ds_PipeReg.GetColumn(i,"PIPE_CAR_TOT_LENG")+ "M)");
			strParameter += ",FORM_FLAG=1";
			strParameter += ",INSPECT_YEAR="         + quote(ds_PipeReg.GetColumn(i,"INSPECT_YEAR"));
			strParameter += ",BLOCK_CD="             + quote(ds_PipeReg.GetColumn(i,"BLOCK_CD"));
			strParameter += ",REG_INSPECT_PLAN_YMD=" + quote(ds_PipeReg.GetColumn(i,"REG_INSPECT_PLAN_YMD"));
			strParameter += ",SAFE_OFFICE_NUM="      + quote("");
			
			ds_ReportList.SetColumn(nRow, "SYSTEM_ID"   ,strPart     ); // 시스템 명 
			ds_ReportList.SetColumn(nRow, "REPORT_ID"   ,strReport   ); // 출력물 ID 
			ds_ReportList.SetColumn(nRow, "REPORT_ARGS" ,strParameter); // 파라미터구문 
			ds_ReportList.SetColumn(nRow, "REPORT_TITLE",strTitle    ); // 출력물 제목		
			
			var nRow1 = ds_UpdateForm_Copy.addRow();
			
			ds_UpdateForm_Copy.SetColumn(nRow1, "UPD_EMPID"   , gfn_GetGlobalValue("G_USER_NO"       ));
			ds_UpdateForm_Copy.SetColumn(nRow1, "UPD_IP"      , gfn_GetGlobalValue("G_IPADDRESS"     ));
			ds_UpdateForm_Copy.SetColumn(nRow1, "INSPECT_YEAR", ds_PipeReg.GetColumn(i,"INSPECT_YEAR"));
			ds_UpdateForm_Copy.SetColumn(nRow1, "BLOCK_CD"    , ds_PipeReg.GetColumn(i,"BLOCK_CD"));
			ds_UpdateForm_Copy.SetColumn(nRow1, "FORM_FLAG"   , '1');			
		}
	}
	
	var str_StateFlag = gfn_Dialog("D10","D1301010014U","",450,400,true,-1,-1);
	
	for(var i=0; i<nCount; i++){
		
		if(ds_PipeReg.GetColumn(i,"CHK") == 1){
			
			if(str_StateFlag == '' || str_StateFlag == null){
					return;
			}					
								
			ds_PipeReg.SetColumn(i, "FIX_INSPECT_REQ_YN", str_StateFlag);
		}
	}
}]]></Script>
</Window>